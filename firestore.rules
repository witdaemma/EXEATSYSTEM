
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user's role from their profile
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Allow authenticated users to read profiles, but only update their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create;
      allow update: if request.auth.uid == userId;
    }

    // Allow read access for the verification counter
    match /counters/exeatRequests {
      allow read: if true;
      allow write: if false; // Only backend/transactions should write
    }

    match /exeatRequests/{exeatId} {
      // READ:
      // 1. Staff (porter, hod, dsa) can read any request.
      // 2. A student can read a request if their ID is on it.
      allow read: if getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa']
                    || request.auth.uid == resource.data.studentId;

      // CREATE:
      // Only students can create requests, and they must be creating it for themselves.
      allow create: if getUserRole(request.auth.uid) == 'student'
                      && request.auth.uid == request.resource.data.studentId;

      // UPDATE:
      // Only staff can update requests.
      allow update: if getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa'];

      // Approval Trail subcollection
      match /approvalTrail/{commentId} {
        // READ:
        // Anyone who can read the parent exeat can read the trail.
        allow read: if get(/databases/$(database)/documents/exeatRequests/$(exeatId)).data.studentId == request.auth.uid
                      || getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa'];
        
        // WRITE:
        // Only staff or the student who owns the request can add to the trail.
        allow write: if getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa']
                       || request.auth.uid == get(/databases/$(database)/documents/exeatRequests/$(exeatId)).data.studentId;
      }
    }
  }
}
