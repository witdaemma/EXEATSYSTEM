rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user's role from their profile
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    match /users/{userId} {
      // Users can read their own profile
      allow read: if request.auth.uid == userId;
      // Users can update their own full name
      allow update: if request.auth.uid == userId && request.resource.data.keys().hasOnly(['fullName']);
      // Allow creation during signup
      allow create: if request.auth != null; 
    }
    
    match /counters/{counterId} {
      // Only authenticated users can read/write to counters (for ID generation)
      allow read, write: if request.auth != null;
    }

    match /exeatRequests/{exeatId} {
      // Allow creation only if the user is the student submitting it
      allow create: if request.auth.uid == request.resource.data.studentId
                    && getUserRole(request.auth.uid) == 'student';
                    
      // NEW, SIMPLIFIED READ RULE (covers both single GET and LIST queries)
      allow read: if 
                  // A student can read requests where their UID is the studentId
                  (request.auth.uid == resource.data.studentId) || 
                  // Staff can read any/all requests
                  (getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa']);

      // Who can update? (Staff only)
      allow update: if getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa'];

      match /approvalTrail/{commentId} {
        // Trail can be read by anyone who can read the parent exeat request
        allow read: if exists(/databases/$(database)/documents/exeatRequests/$(exeatId));
        // Trail entries can be created by any authenticated user (the parent update rule gates this)
        allow create: if request.auth != null;
      }
    }
  }
}
