
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the user's role from their profile
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Users can read/update their own profile
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      // Only authenticated users can create their own profile (on signup)
      allow create: if request.auth.uid == userId;
    }

    // Exeat Requests
    match /exeatRequests/{exeatId} {
      // Allow creation by any authenticated user who has the 'student' role
      allow create: if request.auth != null && getUserRole(request.auth.uid) == 'student';
      
      // Allow read by the student who owns it, or any authenticated staff
      allow read: if request.auth != null && (resource.data.studentId == request.auth.uid || getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa']);
      
      // Allow update only by authenticated staff members according to the current stage
      allow update: if request.auth != null && getUserRole(request.auth.uid) == resource.data.currentStage;
    }
    
    // Approval Trail subcollection
    match /exeatRequests/{exeatId}/approvalTrail/{commentId} {
        // Allow read by student owner or any staff
        allow read: if request.auth != null && (get(/databases/$(database)/documents/exeatRequests/$(exeatId)).data.studentId == request.auth.uid || getUserRole(request.auth.uid) in ['porter', 'hod', 'dsa']);
        
        // Allow creation (adding a comment) by student (for initial submission) or staff at the correct stage
        allow create: if request.auth != null && (
            (getUserRole(request.auth.uid) == 'student' && get(/databases/$(database)/documents/exeatRequests/$(exeatId)).data.studentId == request.auth.uid) || 
            (getUserRole(request.auth.uid) == get(/databases/$(database)/documents/exeatRequests/$(exeatId)).data.currentStage)
          );
    }

    // Allow read access to the counter for ID generation
    match /counters/exeatRequests {
        allow read, write: if request.auth != null; // Allow any authenticated user to read/write (for transactions)
    }
  }
}
